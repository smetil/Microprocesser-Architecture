section .data
    pmsg db 10, "Hello World", 10, 10  ; Define a message to print, with newline characters before and after.
    pmsg_len equ $ - pmsg              ; Calculate the length of the message.

; Define a macro to print a message to the standard output.
%macro Print 2
    mov rax, 1          ; sys_write system call number (1).
    mov rdi, 1          ; File descriptor (1 = stdout).
    mov rsi, %1         ; Pointer to the message (first argument to the macro).
    mov rdx, %2         ; Length of the message (second argument to the macro).
    syscall             ; Make the system call to write the message.
%endmacro

; Define a macro to exit the program.
%macro Exit 0
    mov rax, 60         ; sys_exit system call number (60).
    mov rdi, 0          ; Exit code (0 means successful execution).
    syscall             ; Make the system call to exit the program.
%endmacro

section .text
    global _start       ; Declare the entry point (starting point) of the program.

_start:
    Print pmsg, pmsg_len ; Use the Print macro to display the message.
    Exit                ; Use the Exit macro to exit the program.
